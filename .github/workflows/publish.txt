name: Release Production Packages
on:
  push:
    tags: v*

env:
  Configuration: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: 0
  DOTNET_NOLOGO: 1
  PackageOutputPath: .nupkg

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.201

    - name: Generate Version using NBGV
      uses: aarnott/nbgv@v0.3
      id: nbgv

    - name: Restore, Build, and Test
      env:
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
      run: dotnet test

    - name: Package
      run: dotnet pack

    - name: Create ZIP Archive
      id: zip
      shell: pwsh
      run: |
        $ZipFile = "restfu-v${{ steps.nbgv.outputs.Version }}.zip"

        [System.IO.Compression.ZipFile]::CreateFromDirectory(
          $Env:PackageOutputPath,
          $ZipFile,
          'NoCompression',
          $false
        )

        "::set-output name=file::$ZipFile"

    - name: Create GitHub Release
      if: steps.nbgv.outputs.Version
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.nbgv.outputs.Version }}
        release_name: v${{ steps.nbgv.outputs.Version }}
        draft: true
        prerelease: ${{ steps.nbgv.outputs.PrereleaseVersion != '' }}

    - name: Upload Packages to the GitHub Release
      if: steps.zip.outputs.file && steps.create_release.outputs.upload_url
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.zip.outputs.file }}
        asset_name: ${{ steps.zip.outputs.file }}
        asset_content_type: application/zip
