name: dev
on:
  push:
  pull_request:
jobs:
  publish:
    runs-on: [windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101

    - name: Test
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 0
        DOTNET_NOLOGO: 1
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
      run: dotnet test

    - name: Build NuGet Packages
      id: build
      if: github.event_name == 'push' && (github.ref == 'refs/heads/dev' || startsWith(github.ref, 'refs/tags/v'))
      shell: pwsh
      run: |

        $GithubRef = '${{ github.ref }}'
        $Props = @{
          RepositoryCommit = '${{ github.sha }}'
        }

        if ($GithubRef -match '^refs/heads/(.+)$') {
          $Props.RepositoryBranch = $matches[1]
          $Props.VersionSuffix = '{0}-{1:yyyy-MM-dd-HHmmss}-{2}' -f
            $matches[1]
            (Get-Date).ToUniversalTime(),
            $Props.RepositoryCommit.Substring(0, 7)
        }
        elseif ($GithubRef -match '^refs/tags/v(.+)$') {
          $Props.Version = $matches[1]
        }

        $PackArgs = @(
          '--configuration', 'Release', '--no-restore',
        )

        foreach ($tuple in $Props.GetEnumerator()) {
          $PackArgs += "-p:$($tuple.Key)=$($tuple.Value)"
        }

        $PackArgs
        write-output "::set-output name=branch::$($Props.RepositoryBranch)"
        write-output "::set-output name=version::$($Props.Version)"
        write-output "::set-output name=version_suffix::$($Props.VersionSuffix)"

        # dotnet pack @PackArgs

        # Get-ChildItem $Env:GITHUB_WORKSPACE\.nupkg\*.nupkg |% {
        #   curl -sSX PUT `
        #     -u "juliekoubova:${{ secrets.GITHUB_TOKEN }}" `
        #     -F package=@$_ `
        #     https://nuget.pkg.github.com/juliekoubova/
        # }

    - name: Publish to nuget.org
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      shell: pwsh
      env:
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
      run: |
        $Branch = '${{ github.ref }}'
        $SHA = '${{ github.sha }}'
        $Branch, $SHA, '${{ github.event_name }}', 'pre:${{ github.event.release.prerelease }}'

        # dotnet pack `
        #   --configuration Release `
        #   --no-restore `
        #   --version-suffix preview1 `
        #   --p:RepositoryBranch=$Branch `
        #   --p:RepositoryCommit=$SHA

        # dotnet push $Env:GITHUB_WORKSPACE\.nupkg\*.nupkg -k $Env:NUGET_KEY
