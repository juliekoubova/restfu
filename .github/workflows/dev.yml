name: dev
on:
  push:
  pull_request:
  release:
    types: [ published, prerelased ]

jobs:
  publish:
    runs-on: [windows-latest]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
    - name: Test
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 0
        DOTNET_NOLOGO: 1
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
      run: dotnet test
    - name: Publish to GitHub Packages
      if: github.event_name == 'push' && github.ref == 'dev'
      shell: pwsh
      run: |
        $Branch = '${{ github.ref }}'
        $SHA = '${{ github.sha }}'
        $VersionSuffix = '{0}-{1:yyyy-MM-dd-HHmmss}-{2}' -f
          $Branch,
          (Get-Date).ToUniversalTime(),
          $SHA.Substring(0, 7)

        dotnet pack `
          --configuration Release `
          --no-restore `
          --version-suffix $VersionSuffix `
          --p:RepositoryBranch=$Branch `
          --p:RepositoryCommit=$SHA

        Get-ChildItem $Env:GITHUB_WORKSPACE\.nupkg\*.nupkg |% {
          curl -sSX PUT `
            -u "juliekoubova:${{ secrets.GITHUB_TOKEN }}" `
            -F package=@$_ `
            https://nuget.pkg.github.com/juliekoubova/
        }

    - name: Publish to nuget.org
      if: github.event_name == 'release'
      shell: pwsh
      env:
        NUGET_KEY: ${{ secrets.NUGET_KEY }}
      run: |
        $Branch = '${{ github.ref }}'
        $SHA = '${{ github.sha }}'
        $Branch, $SHA, '${{ github.event_name }}', 'pre:${{ github.event.release.prerelease }}'

        # dotnet pack `
        #   --configuration Release `
        #   --no-restore `
        #   --version-suffix preview1 `
        #   --p:RepositoryBranch=$Branch `
        #   --p:RepositoryCommit=$SHA

        # dotnet push $Env:GITHUB_WORKSPACE\.nupkg\*.nupkg -k $Env:NUGET_KEY
